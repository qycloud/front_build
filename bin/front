#!/usr/bin/env node
var fs = require('fs'),
    program = require('commander'),
    Build = require('../lib/build'),
    buildInstance,
    configPath,
    packageConfig;

packageConfig = JSON.parse(
    fs.readFileSync(__dirname + '/../package.json').toString()
);
program.version(packageConfig.version)
    .option('-c, --config', 'set config file')
    .option('-f, --force', 'build file even it exists')
    .option('-i, --ignore', 'unnecessary to create rbuild.lock file in application root directory')
    .option('-r, --replace', 'replace urls in css files with absolute path')
    .parse(process.argv);

if (program.config) {
    if (program.args.length > 0) {
        configPath = program.args[program.args.length - 1];
    } else {
        console.log('error: option `c` requires a value');
        process.exit(1);
    }
} else {
    configPath = process.cwd() + '/.rbuildrc';
}

if (!fs.existsSync(configPath)) {
    console.log('error: file %s not found', configPath);
    process.exit(1);
}

buildInstance = new Build({
    config: configPath,
    store: (program.ignore !== true),
    force: (program.force === true),
    replace: (program.replace === true)
});
buildInstance.run();
